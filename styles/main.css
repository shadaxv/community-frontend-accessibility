@import "open-props/easings";
@import "open-props/shadows";
@import "theme-toggle.css";

@custom-media --motionOK (prefers-reduced-motion: no-preference);

:root {
  --brand-hue: 220;
  --brand-hue2: 240;

  --brand: hsl(var(--brand-hue) 100% 37%);
  --surface: hsl(var(--brand-hue) 20% 98%);
  --surface-alpha: var(--brand-hue) 20% 98%;
  --surface2: hsl(var(--brand-hue) 12% 87%);
  --text: hsl(var(--brand-hue) 10% 15%);
  --text2: hsl(var(--brand-hue) 10% 23%);

  --button-border: rgba(27, 31, 35, 0.15);
  --button-border-hover: rgba(27, 31, 36, 0.15);
  --button-box-shadow: rgba(27, 31, 35, 0.04) 0 1px 0,
    rgba(255, 255, 255, 0.25) 0 1px 0 inset;
  --button-color: #24292e;
  --button-bg: #fafbfc;
  --button-bg-hover: #f3f4f6;
  --button-bg-active: #edeff2;
  --button-disabled: #959da5;
}

:focus {
  outline-offset: 0.75ch;
  outline-color: var(--brand);
}

::marker {
  color: var(--brand);
}

@media (--motionOK) {
  html {
    scroll-behavior: smooth;
  }

  * {
    scroll-behavior: smooth;
  }
}

html {
  block-size: 100%;
  inline-size: 100%;
  scroll-padding-top: 8rem;
  background: var(--surface);
  color-scheme: light;

  &[data-theme="dark"] {
    color-scheme: dark;

    /* --brand: hsl(calc(var(--brand-hue) + 20) 94.9% 84.7%); */
    --brand: hsl(var(--brand-hue2) 94.9% 84.7%);
    --surface: hsl(var(--brand-hue) 3.2% 12.2%);
    --surface-alpha: var(--brand-hue) 3.2% 12.2%;
    --surface2: hsl(var(--brand-hue) 5.6% 21.2%);
    --text: hsl(var(--brand-hue) 47.8% 95.5%);
    --text2: hsl(var(--brand-hue) 20% 72%);

    --button-border: rgba(240, 246, 252, 0.1);
    --button-border-hover: #8b949e;
    --button-box-shadow: none;
    --button-color: #c9d1d9;
    --button-bg: #21262d;
    --button-bg-hover: #30363d;
    --button-bg-active: hsla(212, 12%, 18%, 1);
    --button-disabled: #959da5;

    /*
      Set background to default dark value
      if color-scheme is not supported
    */
    /* @supports not (color-scheme: dark) {
      background: #111111; 
    } */
  }
}

body {
  min-block-size: 100%;
  min-inline-size: 100%;
  box-sizing: border-box;
  margin: 0;

  font-family: system-ui, sans-serif;
  color: var(--text);
  background-color: var(--surface);
}

main {
  display: grid;
  place-content: center;
  gap: 15vmin;
  padding-block: 15vmin;
}

section {
  display: grid;
  gap: 2ch;
}

section > section {
  margin-block: 2ch;
}

p,
li,
dd,
dt,
summary,
fieldset {
  max-inline-size: 66ch;
  font-size: 1.25rem;
  font-weight: 300;
  line-height: 1.75;
}

p,
h1,
h2,
h3,
h4,
h5,
h6,
ul,
ol,
dl,
figure,
blockquote {
  margin-block: 0;
}

figure {
  text-align: center;
}

blockquote {
  max-inline-size: 75ch;
}

a {
  color: var(--brand);
}

small {
  font-size: max(0.5em, 0.8rem);
}

h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 0;
  line-height: 1.25;
}

h1,
h2,
h3 {
  font-weight: lighter;
  letter-spacing: 0.05em;
}

h1 {
  font-size: clamp(3rem, 6vmin, 4rem);
  max-inline-size: 20ch;
}

h2 {
  font-size: clamp(2rem, 4vmin, 3rem);
  max-inline-size: 40ch;
}

h3 {
  font-size: clamp(1.75rem, 3vmin, 2rem);
  max-inline-size: 30ch;
}

h4 {
  font-size: clamp(1.5rem, 3vmin, 1.75rem);
  max-inline-size: 30ch;
}
h5 {
  font-size: clamp(1.25rem, 2.5vmin, 1.5rem);
  max-inline-size: 35ch;
}
h6 {
  font-size: clamp(1.1rem, 2vmin, 1.25rem);
  max-inline-size: 40ch;
}

ol,
ul,
dl {
  display: grid;
  gap: 1rem;
  max-inline-size: max-content;
  --counter-item: item;
}

ol {
  counter-reset: var(--counter-item);
}

ol > li {
  counter-increment: var(--counter-item);
}

ol > li::marker {
  content: counters(var(--counter-item), ".") ". ";
}

li,
dd {
  max-inline-size: 50ch;
  font-size: 1.1rem;
}

dt {
  font-weight: bolder;
}

dt:not(:first-of-type) {
  margin-top: 2ch;
}

img {
  max-inline-size: 100%;
  block-size: auto;
}

sup,
small {
  color: var(--text2);
}

details {
  max-inline-size: max-content;
  background-color: var(--surface2);
  padding: 1rem;
  border-radius: 1ch;
}

details > *:not(summary):first-of-type {
  margin-block-start: 1rem;
}

input,
progress {
  accent-color: var(--brand);
}

code {
  padding-inline: 1ch;
  background: var(--surface2);
  border-radius: 0.375rem;
  display: inline-block;
  font-size: 1rem;
}

fieldset {
  border: 1px solid;
  border-radius: 0.5rem;
}

legend {
  padding-inline: 0.375rem;
}

:target {
  outline: 2px solid var(--brand);
  outline-offset: 1.5rem;
  border-radius: 0.75rem;
}

body {
  counter-reset: section;
}

.counter::before {
  counter-increment: section;
  content: counter(section) ": ";
}

.grid--3-columns {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 1rem;
}

.grid {
  display: grid;
  gap: 0.5rem;
  justify-content: start;
}

.flex {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  gap: 0.5rem;
}

.space-between {
  justify-content: space-between;
}

.space-around {
  justify-content: space-around;
}

.sticky-top {
  position: sticky;
  inset: 0 0 auto;
  padding-block: 1rem;
  padding-inline: 1rem;
  background: var(--surface);
  box-shadow: var(--shadow-3);
  z-index: 10;

  @supports (backdrop-filter: blur(1px)) {
    backdrop-filter: blur(8px) saturate(1.25);
    background: hsla(var(--surface-alpha) / 0.5);
  }

  & > div {
    display: flex;
    justify-content: space-between;
    align-items: center;
    max-inline-size: 45.5rem;
    margin: 0 auto;
  }
}

.button {
  background-color: var(--button-bg);
  border: 1px solid var(--button-border);
  border-radius: 0.375rem;
  box-shadow: var(--button-box-shadow);
  color: var(--button-color);
  font-family: system-ui, sans-serif;
  font-size: 0.875rem;
  font-weight: 500;
  line-height: 1.25rem;
  padding: 0.375rem 1rem;
  transition: background-color 0.2s cubic-bezier(0.3, 0, 0.5, 1);
  outline-offset: 0;
  text-align: center;
  text-decoration: none;
}

.button:hover {
  background-color: var(--button-bg-hover);
  text-decoration: none;
  transition-duration: 0.1s;
  cursor: pointer;
}

.button:not(.button--no-focus):not(.button--focus-visible):focus {
  background-color: var(--button-bg-hover);
  text-decoration: none;
  transition-duration: 0.1s;
  cursor: pointer;
  outline: 2px solid currentColor;
}

.button.button:not(:disabled):active {
  background-color: var(--button-bg-active);
  box-shadow: var(--button-box-shadow);
  transition: none 0s;
}

.button--focus-visible:focus-visible {
  background-color: var(--button-bg-hover);
  text-decoration: none;
  transition-duration: 0.1s;
  cursor: pointer;
  outline: 2px solid currentColor;
}

.button--no-outline {
  outline: none !important;
}

.button:disabled {
  background-color: var(--button-bg);
  border: 1px solid var(--button-border);
  color: var(--button-disabled);
  cursor: default;
}

.margin {
  margin: 3ch;
}

.button--hidden {
  position: absolute;
  opacity: 0;
  z-index: -1;
}

@media (--motionOK) {
  .button--hidden:focus {
    transition: opacity 300ms ease-in;
  }
}

.button--hidden:focus {
  opacity: 1;
  z-index: 0;
}

.submenu--hover {
  position: absolute;
  background: var(--surface2);
  white-space: nowrap;
  left: 50%;
  transform: translateX(-50%);
  box-sizing: border-box;
  border-radius: 0.75rem;
}

.submenu--tabbed {
  opacity: 0;
  visibility: hidden;
  position: absolute;
  background: var(--surface2);
  white-space: nowrap;
  left: 50%;
  transform: translateX(-50%);
  box-sizing: border-box;
  border-radius: 0.75rem;
}

.submenu--arrow {
  opacity: 0;
  visibility: hidden;
  position: absolute;
  background: var(--surface2);
  white-space: nowrap;
  left: 50%;
  transform: translateX(-50%);
  box-sizing: border-box;
  border-radius: 0.75rem;
}

.submenu {
  z-index: var(--z-index, 1);
}

.menu > li:not(:hover) > .submenu--hover {
  display: none;
}

.menu > li:hover > .submenu--tabbed,
.menu > li:focus > .submenu--tabbed,
.menu > li:focus-within > .submenu--tabbed {
  opacity: 1;
  visibility: visible;
}

.menu > li:hover > .submenu--arrow,
.menu > li:focus > .submenu--arrow,
.menu > li:focus-within > .submenu--arrow {
  opacity: 1;
  visibility: visible;
}

ul {
  list-style-type: none;
  padding: 1rem;
  background: var(--surface);
}

.submenu-opener {
  position: relative;
}

.submenu-opener ul li {
  display: inline-grid;
}

.screen-reader {
  position: absolute;
  left: -10000px;
  top: auto;
  width: 1px;
  height: 1px;
  overflow: hidden;
  pointer-events: none;
}

.always2vw {
  font-size: 2vw;
  width: 16vw;
  height: 16vw;
  display: flex;
  align-items: center;
  justify-content: center;
  background: var(--surface2);
  margin: 0.5rem;
}

.always16px {
  font-size: 16px;
  width: 128px;
  height: 128px;
  display: flex;
  align-items: center;
  justify-content: center;
  background: var(--surface2);
  margin: 0.5rem;
}

.always1rem {
  font-size: 1rem;
  width: 8rem;
  height: 8rem;
  display: flex;
  align-items: center;
  justify-content: center;
  background: var(--surface2);
  margin: 0.5rem;
}